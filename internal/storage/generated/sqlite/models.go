// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlite

import (
	"time"
)

type BrokerConfig struct {
	ID              int64       `json:"id"`
	Name            string      `json:"name"`
	Type            string      `json:"type"`
	Config          string      `json:"config"`
	Active          *bool       `json:"active"`
	HealthStatus    *string     `json:"health_status"`
	LastHealthCheck *time.Time  `json:"last_health_check"`
	CreatedAt       *time.Time  `json:"created_at"`
	UpdatedAt       *time.Time  `json:"updated_at"`
	DlqEnabled      *bool       `json:"dlq_enabled"`
	DlqBrokerID     *int64      `json:"dlq_broker_id"`
	CONSTRAINT      interface{} `json:"CONSTRAINT"`
}

type DlqMessage struct {
	ID             int64      `json:"id"`
	MessageID      string     `json:"message_id"`
	RouteID        int64      `json:"route_id"`
	TriggerID      *int64     `json:"trigger_id"`
	PipelineID     *int64     `json:"pipeline_id"`
	SourceBrokerID int64      `json:"source_broker_id"`
	DlqBrokerID    int64      `json:"dlq_broker_id"`
	BrokerName     string     `json:"broker_name"`
	Queue          string     `json:"queue"`
	Exchange       *string    `json:"exchange"`
	RoutingKey     string     `json:"routing_key"`
	Headers        *string    `json:"headers"`
	Body           string     `json:"body"`
	ErrorMessage   string     `json:"error_message"`
	FailureCount   *int64     `json:"failure_count"`
	FirstFailure   time.Time  `json:"first_failure"`
	LastFailure    time.Time  `json:"last_failure"`
	NextRetry      *time.Time `json:"next_retry"`
	Status         *string    `json:"status"`
	Metadata       *string    `json:"metadata"`
	CreatedAt      *time.Time `json:"created_at"`
	UpdatedAt      *time.Time `json:"updated_at"`
}

type Pipeline struct {
	ID          int64      `json:"id"`
	Name        string     `json:"name"`
	Description *string    `json:"description"`
	Stages      string     `json:"stages"`
	Active      *bool      `json:"active"`
	CreatedAt   *time.Time `json:"created_at"`
	UpdatedAt   *time.Time `json:"updated_at"`
}

type Route struct {
	ID                  int64      `json:"id"`
	Name                string     `json:"name"`
	Endpoint            string     `json:"endpoint"`
	Method              string     `json:"method"`
	Queue               string     `json:"queue"`
	Exchange            *string    `json:"exchange"`
	RoutingKey          string     `json:"routing_key"`
	Filters             *string    `json:"filters"`
	Headers             *string    `json:"headers"`
	Active              *bool      `json:"active"`
	CreatedAt           *time.Time `json:"created_at"`
	UpdatedAt           *time.Time `json:"updated_at"`
	PipelineID          *int64     `json:"pipeline_id"`
	TriggerID           *int64     `json:"trigger_id"`
	DestinationBrokerID *int64     `json:"destination_broker_id"`
	Priority            *int64     `json:"priority"`
	ConditionExpression *string    `json:"condition_expression"`
	SignatureConfig     *string    `json:"signature_config"`
	SignatureSecret     *string    `json:"signature_secret"`
}

type Setting struct {
	Key       string     `json:"key"`
	Value     string     `json:"value"`
	UpdatedAt *time.Time `json:"updated_at"`
}

type Trigger struct {
	ID            int64      `json:"id"`
	Name          string     `json:"name"`
	Type          string     `json:"type"`
	Config        string     `json:"config"`
	Status        *string    `json:"status"`
	Active        *bool      `json:"active"`
	ErrorMessage  *string    `json:"error_message"`
	LastExecution *time.Time `json:"last_execution"`
	NextExecution *time.Time `json:"next_execution"`
	CreatedAt     *time.Time `json:"created_at"`
	UpdatedAt     *time.Time `json:"updated_at"`
}

type User struct {
	ID           int64      `json:"id"`
	Username     string     `json:"username"`
	PasswordHash string     `json:"password_hash"`
	IsDefault    *bool      `json:"is_default"`
	CreatedAt    *time.Time `json:"created_at"`
	UpdatedAt    *time.Time `json:"updated_at"`
}

type WebhookLog struct {
	ID                   int64      `json:"id"`
	RouteID              *int64     `json:"route_id"`
	Method               string     `json:"method"`
	Endpoint             string     `json:"endpoint"`
	Headers              *string    `json:"headers"`
	Body                 *string    `json:"body"`
	StatusCode           *int64     `json:"status_code"`
	Error                *string    `json:"error"`
	ProcessedAt          *time.Time `json:"processed_at"`
	TriggerID            *int64     `json:"trigger_id"`
	PipelineID           *int64     `json:"pipeline_id"`
	TransformationTimeMs *int64     `json:"transformation_time_ms"`
	BrokerPublishTimeMs  *int64     `json:"broker_publish_time_ms"`
}
